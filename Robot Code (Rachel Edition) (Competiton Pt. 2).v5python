{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\ncontroller_1 = Controller(PRIMARY)\n# vex-vision-config:begin\ncamera__Y_DISK = Signature(1, 379, 1101, 740,-5753, -5015, -5384,2.5, 0)\ncamera__SIG_2 = Signature(2, 0, 0, 0,0, 0, 0,3, 0)\ncamera = Vision(Ports.PORT17, 24, camera__Y_DISK, camera__SIG_2)\n# vex-vision-config:end\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      Robot Code\n#\tAuthor:       Micah Perteet and Rachel Han (aka Team 1750)\n#\tCreated:      2022-2023\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\n\nimport vex\nimport time\n\n                                #DEFINE VARIABLES\n\nMAX_VALUE = 127\nTURN_RATIO = 1\nMode = \"Drive\"\nbuttonPressed = False\nbuttonPressedA = False\nbuttonPressedUp = False\nbuttonPressedDown = False\nbuttonPressedR2L2 = False\nEndgame2 = False\n\ncontroller_1.screen.set_cursor(1, 1)\nbrain.screen.set_cursor(1,1)\nbrain.screen.print(\"Thunderstorm Robotics Team 1750\")\nbrain.screen.set_cursor(6,1)\nbrain.screen.print(\"#GreaterThanFortniteYAY!\")\n\nnumber = 0\n\n                            #BEGIN PROGRAMMING CODE\n\nmotor_R_front = vex.Motor(vex.Ports.PORT1, vex.GearSetting.RATIO_18_1, False)\nmotor_L_front = vex.Motor(vex.Ports.PORT2, vex.GearSetting.RATIO_18_1, False)\nmotor_R_rear = vex.Motor(vex.Ports.PORT3, vex.GearSetting.RATIO_18_1, False)\nmotor_L_rear = vex.Motor(vex.Ports.PORT4, vex.GearSetting.RATIO_18_1, False)\nmotor_roller_1 = vex.Motor(vex.Ports.PORT11, vex.GearSetting.RATIO_6_1, False)\nmotor_roller_2 = vex.Motor(vex.Ports.PORT19, vex.GearSetting.RATIO_18_1, False)\n#motor_elevator = vex.Motor(vex.Ports.PORT18, vex.GearSetting.RATIO_6_1, False)\nmotor_string_shooter = vex.Motor(vex.Ports.PORT12, vex.GearSetting.RATIO_6_1, False)\n#motor_disk = vex.Motor(vex.Ports.PORT9, vex.GearSetting.RATIO_18_1, False)\nmotor_R_front.set_reversed(True)\nmotor_L_front.set_reversed(False)\nmotor_R_rear.set_reversed(True)\nmotor_L_rear.set_reversed(False)\nmotor_roller_1.set_reversed(True)\n\n#motor\n\n#motor_disk.set_reversed(True)\n\n                                       #MOTOR SPEED SET\n\ndef LeftMotorFRONT(speed):\n    direction = FORWARD if speed > 0 else REVERSE\n    motor_L_front.spin(direction, abs(speed), PERCENT)\n\ndef RightMotorFRONT(speed):\n    direction = FORWARD if speed > 0 else REVERSE\n    motor_R_front.spin(direction, abs(speed), PERCENT) \n\ndef LeftMotorREAR(speed):\n    direction = FORWARD if speed > 0 else REVERSE\n    motor_L_rear.spin(direction, abs(speed), PERCENT)\n\ndef RightMotorREAR(speed):\n    direction = FORWARD if speed > 0 else REVERSE\n    motor_R_rear.spin(direction, abs(speed), PERCENT) \n\n\ndef Auto():\n    global Mode\n    global number\n    LeftMotorSpeed = 50\n    RightMotorSpeed = 50\n    motor_roller_1.spin(FORWARD, 100, PERCENT)\n    #motor_roller_2.spin(FORWARD, 100, PERCENT)\n    screenMiddle = 312/2\n\n    # if controller_1.buttonB.pressing() and Mode == \"Auto\":\n    #     controller_1.screen.clear_screen()\n    #     controller_1.screen.set_cursor(1, 1)\n    #     controller_1.screen.print(\"Drive\")\n    #     motor_roller_1.stop()\n    #     #motor_roller_2.stop()\n    #     Mode = \"Drive\"\n    #  if global Mode == (Auto):\n     #     # Driving Forward\n      #      drivetrain.drive_for(FORWARD, 50, MM)\n       #   motor_roller_1.spin(FORWARD, 100, PERCENT)\n        #  wait(0.4, SECONDS)\n          # Driving reverse\n         #   drivetrain.drive_for(REVERSE, 50, MM)\n          \n    # if number == 100:\n    #     linedup = False\n    #     camera.take_snapshot(camera__Y_DISK)\n    #     largest_object = camera.largest_object()\n    #     if not linedup and largest_object is not None:\n    #         #Object found, track and move towards it\n    #         print(largest_object.centerX)\n    #         if largest_object.centerX > screenMiddle + 30:\n    #             RightMotorSpeed = 20\n    #             LeftMotorSpeed = 40\n    #         elif largest_object.centerX < screenMiddle - 30:\n    #             LeftMotorSpeed = 20\n    #             RightMotorSpeed = 40\n    #         else:\n    #             linedup = True\n    #             LeftMotorSpeed = 40\n    #             RightMotorSpeed = 40\n    #         RightMotor(RightMotorSpeed)\n    #         LeftMotor(LeftMotorSpeed)\n\n    #     if largest_object is None:\n    #         #Object not found, spin\n    #         RightMotor(0)\n    #         LeftMotor(50)\n\n    #     number = 0\n    # number += 1\n\n                                   #THE CODE FOR THE ROLLERS\n\ndef Drive():\n    global Mode\n    global buttonPressed\n    #global buttonPressedA\n    #global buttonPressedUp\n    #global buttonPressedRight\n    #global buttonPressedY\n    #global buttonPressedDown\n    global buttonPressedR2L2\n    #global buttonPressedR1\n    \n                                       #DRIVING CONTROLS\n    \n    # if controller_1.buttonB.pressing() and Mode == \"Drive\":\n     #    controller_1.screen.clear_screen()\n      #   controller_1.screen.print(\"Auto\")\n       #  Mode = \"Auto\"\n    leftStick = controller_1.axis3.value()\n    rightStick = controller_1.axis2.value()\n   # leftStickX = controller_1.axis4.value()\n    if (controller_1.buttonL1.pressing() == 1 or controller_1.buttonR1.pressing() == 1) and not buttonPressedR2L2:\n        motor_roller_1.spin(FORWARD, 100, PERCENT)\n        #motor_roller_2.spin(FORWARD, 100, PERCENT)\n        buttonPressedR2L2 = True\n    if buttonPressedR2L2 and controller_1.buttonL1.pressing() == 0 and controller_1.buttonR1.pressing() == 0:\n        buttonPressedR2L2 = False\n        motor_roller_1.stop()\n        #motor_roller_2.stop()\n\n    if (controller_1.buttonRight.pressing() == 1 and controller_1.buttonY.pressing() == 1) and not buttonPressed:\n        motor_string_shooter.spin(FORWARD, 100, PERCENT)\n        motor_roller_2.spin(REVERSE, 100, PERCENT)\n        buttonPressed = True\n    if buttonPressed and controller_1.buttonRight.pressing() == 0 and controller_1.buttonY.pressing() == 0:\n        buttonPressed = False\n        motor_string_shooter.stop()\n        motor_roller_2.stop()\n\n\n\n# if (controller_1.buttonRight.pressing() == 1 and controller_1.buttonY.pressing() == 1) and not buttonPressed:\n#         motor_string_shooter.spin(REVERSE, 100, PERCENT)\n\n#         buttonPressed = True\n#     if buttonPressed and controller_1.buttonRight.pressing() == 0 and controller_1.buttonY.pressing() == 0:\n#         buttonPressed = False\n#         motor_string_shooter.stop()\n\n\n\n\n\n    # if (controller_1.buttonL2.pressing() == 1 or controller_1.buttonR2.pressing() == 1) and not buttonPressedR2L2:\n    #     motor_disk.spin(FORWARD, 100, PERCENT)\n    #     buttonPressedR2L2 = True\n    # if buttonPressedR2L2 and controller_1.buttonL2.pressing() == 0 and controller_1.buttonR2.pressing() == 0:\n    #     buttonPressedR2L2 = False\n    #     motor_disk.stop()\n\n    # if (controller_1.buttonA.pressing() == 1) and not buttonPressedA:\n    #     # https://kb.vex.com/hc/en-us/articles/360044325872-Understanding-V5-Smart-Motor-11W-Performance \"60\" Magic Number Explination \n    #     motor_shooter.spin(REVERSE, 60, PERCENT)\n    #     buttonPressedA = True\n    # if buttonPressedA and controller_1.buttonA.pressing() == 0:\n    #     buttonPressedA = False\n    #     motor_shooter.stop()\n\n    # if (controller_1.buttonUp.pressing() == 1) and not buttonPressedUp and not buttonPressedDown:\n    #     motor_elevator.spin(REVERSE, 100, PERCENT)\n    #     buttonPressedUp = True\n    # if buttonPressedUp and controller_1.buttonUp.pressing() == 0:\n    #     buttonPressedUp = False\n    #     motor_elevator.stop()\n    \n    # if (controller_1.buttonDown.pressing() == 1) and not buttonPressedDown and not buttonPressedUp:\n    #     motor_elevator.spin(FORWARD, 100, PERCENT)\n    #     buttonPressedDown = True\n    # if buttonPressedDown and controller_1.buttonDown.pressing() == 0:\n    #     buttonPressedDown = False\n    #     motor_elevator.stop()\n    \n                                             #MOTOR DRIVE LATEST CODING\n\n    motorLeft = leftStick / MAX_VALUE * 100.0            # + leftStickX / MAX_VALUE * TURN_RATIO * 100.0\n    motorLeft = min(motorLeft, 100)\n    motorLeft = max(motorLeft, -100)\n\n    motorRight = rightStick / MAX_VALUE * 100.0          #   - leftStickX / MAX_VALUE * TURN_RATIO * 100.0\n    motorRight = min(motorRight, 100)\n    motorRight = max(motorRight, -100)\n    \n    LeftMotorFRONT(motorLeft)\n    LeftMotorREAR(motorLeft)\n    RightMotorFRONT(motorRight)\n    RightMotorREAR(motorRight)\n\nwhile True:\n    if Mode == \"Drive\":\n        Drive()\n    else:\n        Auto()\n        #Do we even HAVE an auto??\n        #yes, yes we do","textLanguage":"python","rconfig":[{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[17],"name":"camera","customName":true,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":24,\"signatures\":[{\"name\":\"Y_DISK\",\"parameters\":{\"uMin\":379,\"uMax\":1101,\"uMean\":740,\"vMin\":-5753,\"vMax\":-5015,\"vMean\":-5384,\"rgb\":1,\"type\":0,\"name\":\"Y_DISK\"},\"range\":2.5},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":3},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}